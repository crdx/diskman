#!/usr/bin/env ruby
require_relative '../lib/diskman'
require 'docopt'

include Diskman # rubocop:disable Style/MixinUsage

class Main
    def initialize(opts)
        @opts = opts
    end

    def self.run(opts)
        new(opts).run
    end

    def params
        @params ||= OpenStruct.new({
            version: @opts['--version'],
            list: @opts['--list'],
            write: @opts['write'],
            fdisk: @opts['fdisk'],
            mkfs: @opts['mkfs'],
            file: @opts['<file>'],
        })
    end

    def run
        if params.version
            puts VERSION
            exit
        end

        if params.mkfs
            Command::Mkfs.new.run(list: params.list)
        elsif params.write
            Command::Write.new.run(file: params.file)
        elsif params.fdisk
            Command::Fdisk.new.run
        end
    rescue Interrupt # rubocop:disable Lint/SuppressedException
    end
end

usage = <<~EOF
    Usage:
        #{File.basename($0)} write <file>
        #{File.basename($0)} fdisk
        #{File.basename($0)} mkfs [--list]
        #{File.basename($0)} ( --version | --help )

    Options:
        -v, --version    Show version
        -h, --help       Show this help
EOF

begin
    Main.run(Docopt.docopt(usage))
rescue Docopt::Exit
    puts usage
    exit 2
end
